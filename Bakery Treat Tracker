#include <iostream>
#include <string>
using namespace std;

// Structure definitions
struct Address {
    string Town;
    string Street;
};

struct Customer {
    string name;
    int customerID;
    float weeklySpending;
    int age;
    int totalAmount;
};

struct BakeryLocation {
    int locationID;
    Address locationAddress;
     float revenue=0;
     static float count1 ;
   
};
struct Item {
    static float purchase( string item, int option,int numProduct ) {
        float count = 0;
        int f = 0;
        while (f<numProduct  )
        {
            if ( item == "sweetbread" ) {
                if ( option == 1 )
                    count += 2;
                else if ( option == 2 )
                    count += 3.5;
            }
            else if ( item == "carrotcake" ) {
                if ( option == 1 )
                    count += 2.5;
                else if ( option == 2 )
                    count += 20.00;
            }
            else if ( item == "muffin" ) {
                if ( option == 1 )
                    count += 1;
                else if ( option == 2 )
                    count += 8.00;
            }
            else if ( item == "applepie" ) {
                if ( option == 1 )
                    count += 3.00;
                else if ( option == 2 )
                    count += 15.00;
            }
            f++;
        }
        return count;
    }
};

// Function to calculate weekly purchases by a customer
float calculateWeeklyPurchases( Customer customers[], int customerCount ) {
    float totalSpending = 0;
    for ( int i = 0; i < customerCount; ++i ) {
        totalSpending += customers[i].weeklySpending;
    }
    return totalSpending;
}

// Function to display the total revenue generated by each location
void displayLocationRevenue( BakeryLocation locations[], int locationCount ) {
    cout << "Location Revenue:" << endl;
    for ( int i = 0; i < locationCount; ++i ) {
        cout << "Location ID: " << locations[i].locationID << ", Revenue: $" << locations[i].revenue << endl;
    }
}

// Function to determine and print the age group most likely to utilize the loyalty discount program
int main( ) {
    const int customerCount = 2;
    const int locationCount = 3;

    BakeryLocation locations[locationCount] = {
        {2, {"384B", "99C"},2.8},
        {3, {"9223", "10D"},8.9},
        {4, {"45F", "99S"},3.3}
    };
   
    Customer customers[customerCount];
       
    for ( int i = 0; i < customerCount; i++ )
    {
        cout << "Enter your name: " << endl;
        cin >> customers->name;
        cout << "Enter your age: " << endl;
        cin >> customers->age;
        customers->customerID = i+1;
        cout << "MENU DETAIL:" << endl;
        cout << "sweet Bread:" << endl;
        cout << "1.Small   2.Large" << endl;
        cout << "carrot cake:" << endl;
        cout << "1.Slice  2.whole" << endl;
        cout << "muffin" << endl;
        cout << "1.Single  2.Half-Dozen" << endl;
        cout << "apple pie:" << endl;
        cout << "1.Slice    2.whole" << endl << endl;

       
        string itemName;
        int option;
        int total=0;
        cout << "How many products do you want to buy: ";
        int numProducts;
        cin >> numProducts;

        for ( int i = 0; i < numProducts; ++i ) {
            cout << "Enter the product: ";
            cin >> itemName;
            cout << "Enter option: ";
            cin >> option;
           customers[i].totalAmount += Item::purchase( itemName, option, numProducts );
        }
        if ( customerCount < 0 )
        {
            if ( customers[i].totalAmount > 50 )
            {
                cout << "For Top 10 customer 10% discount: " << customers[i].totalAmount[i] * 0.06;
            }
        }
    }
    for(int i=0;i<customerCount;i++ )
    { 
        customers[i].weeklySpending = customers[i].totalAmount + customers[i].weeklySpending;
        if ( customers[i].weeklySpending > 100 )
        {
            customers[i].totalAmount = customers[i].totalAmount * 0.06;
        }
        cout << "Total amount: $" << customers[i].totalAmount << endl;
    }
   
    for ( int i = 0; i < customerCount; i++ )
    {
        cout << "customer ID:" << customers[i].customerID << endl;
        cout << "Customer name: " << customers[i].name << endl;
        cout << "Customer age: " << customers[i].age << endl;
        cout << "Weekly spending money: " << customers[i].weeklySpending << endl;
    }
    int q=0;
    q = calculateWeeklyPurchases( customers, customerCount );
    cout << "Total Weekly Purchases: $" << q<< endl;
    displayLocationRevenue( locations, locationCount );

    return 0;
}
